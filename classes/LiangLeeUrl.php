<?php
/** LiangLeeFramework
 * @package Liang Lee Framework
 * @subpackage LiangLeePage.Class
 * @author Liang Lee
 * @copyright LIANG LEE 2012
 * @ide The Code is Generated by Liang Lee php IDE.
 * @File LiangLeeUrl.php
 */
 defined('C_LEE_EXEC') or die ('Restricted access');  

/**
 * A class that view url, encode and decode url.
 * @uses: Examples;
 */
class LiangLeeUrl {
/**
* View a requested url
* @uses  examples;
* @access: system;
*/
public function requested(){
     return Lianglee_requested_url_full(true);
}

/**
* Encode a give url by using urlencode
* @uses  examples;
* @access: system;
*/
function encode_url($url){
if(!empty($url)){
  $url = utf8_encode($url);
  return urlencode($url);
   }  
}
/**
* Encode a give url by using rawurlencode
* @uses  examples;
* @access: system;
*/
function encode_rawurl($url){
if(!empty($url)){
  $url = rawurlencode($url);
  return $url;
   }  
}
/**
* Decode a give url by using urlencode
* @uses  examples;
* @access: system;
*/
function decode_url($url){
if(!empty($url)){
  $url = utf8_decode($url);
  return urldecode($url);
   }  
}
/**
* Decode a give url by using rawurlencode
* @uses  examples;
* @access: system;
*/
function decode_rawurl($url){
if(!empty($url)){
  $url = rawurldecode($url);
  return $url;
   }  
}
/**
* view a url encode by self encode_url
* @uses  examples;
* @access: system;
*/
public function encode($type, $url){
if($type == 'urlencode+utf8'){
      $return = $this->encode_url($url);
}if($type == 'raw'){
      $return = $this->encode_rawurl($url);
}
return $return;
}
/**
* view a url decode by self decode_url
* @uses  examples;
* @access: system;
*/
public function decode($type, $url){
if($type == 'urlencode+utf8'){
      $return = $this->decode_url($url);
}if($type == 'raw'){
      $return = $this->decode_rawurl($url);
}
return $return;
}

/**
* View a default site url
* @uses  examples;
* @access: system;
*/
public function url(){
       return elgg_get_site_url();
}	
/**
* Construct a new url
* @uses  examples;
* @access: system;
*/
public function construct($url){
       return LiangLeeUrl::url().$url;
}
	
}
   